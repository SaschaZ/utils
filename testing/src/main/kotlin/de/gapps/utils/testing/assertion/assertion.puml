@startuml
package assertion {
    hide IActualScope methods
    interface IActualScope<A: Any> {
        +val actual: A
    }

    IMessageScope -* IValidationScope
    hide IMessageScope methods
    interface IMessageScope {
        {field} +val message: IActualExpectedScope.() -> String
    }
    IActualMessageScope --|> IMessageScope
    IActualMessageScope --|> IActualScope
    hide IActualMessageScope methods
    interface IActualMessageScope<A: Any> {
        +val actual: A
    }

    IValidationScope --|> IActualMessageScope
    interface IValidationScope<A: Any, E: Any> {
        +val expected: E
        +assert()
    }



    ActualMessageScope -|> IActualMessageScope
    hide ActualMessageScope members
    class ActualMessageScope

    ValidationScope --|> IValidationScope
    ValidationScope --|> IActualMessageScope
    ValidationScope --+ ActualMessageScope
    hide ValidationScope members
    class ValidationScope<A: Any, E: Any>

    hide ResourceProvider fields
    ResourceProvider *-- ValidationScope
    class ResourceProvider {
        +fun getString(Int): String
        +fun readFile(filename: String): InputStream
    }
}
@enduml